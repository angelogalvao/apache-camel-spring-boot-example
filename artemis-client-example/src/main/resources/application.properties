
# the name of Camel
camel.springboot.name = Artemis Camel Client Example

# Artemis Configuration

spring.artemis.mode=native
spring.artemis.broker-url=${BROKER_SVC_PORT_61616_TCP:tcp\://localhost:61616}?useTopologyForLoadBalancing=false
spring.artemis.user=${AMQ_USER:admin}
spring.artemis.password=${AMQ_PASSWORD:admin}

test.queue=testQueue

# Openshift Configuration
dekorate.openshift.replicas=2
dekorate.s2i.builder-image=registry.access.redhat.com/ubi9/openjdk-17:latest

dekorate.openshift.env-vars[0].name=AMQ_USER
dekorate.openshift.env-vars[0].value=AMQ_USER
dekorate.openshift.env-vars[0].secret=broker-credentials-secret
dekorate.openshift.env-vars[1].name=AMQ_PASSWORD
dekorate.openshift.env-vars[1].value=AMQ_PASSWORD
dekorate.openshift.env-vars[1].secret=broker-credentials-secret

# what to say
greeting = This is a Camel on Spring Boot integrating with Artemis example message

# how often to trigger the timer
timer.period = 2000

# to automatic shutdown the JVM after a period of time
#camel.springboot.duration-max-seconds=60
#camel.springboot.duration-max-messages=100

# add for example: &repeatCount=5 to the timer endpoint to make Camel idle
#camel.springboot.duration-max-idle-seconds=15

# expose actuator endpoint via HTTP
management.endpoints.web.exposure.include=info,health,camelroutes

# turn on actuator health check
management.endpoint.health.enabled = true

# allow to obtain basic information about camel routes (read only mode)
management.endpoint.camelroutes.enabled = true
management.endpoint.camelroutes.read-only = true

# to configure logging levels
#logging.level.org.springframework = INFO
#logging.level.org.apache.camel.spring.boot = INFO
#logging.level.org.apache.camel.impl = DEBUG
#logging.level.sample.camel = DEBUG
